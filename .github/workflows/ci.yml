name: CI

on:
  push:
    main
  pull_request:

jobs:
  run-tests-linux:
    runs-on: ${{ matrix.os }}
    matrix:
      os: [ubuntu-latest]
      python-version: ['3.9', '3.12', '3.13']

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          poetry-version: 'latest'

      - name: Install dependencies
        run: poetry install --all-groups

      - name: Downloading Folly files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: poetry run python3 ./download.py

      - name: Building Folly
        run: |
          dirs=$(find . -maxdepth 1 -type d -name 'folly-source-*')
          if [ -z "$dirs" ]; then
              echo "Couldn't find any folly source directory."
              exit 1
          fi
          for dir in $dirs; do
              echo "Found folly source dir: $dir"
              cd "$dir" || exit 1
              break
          done
          poetry run python ./build/fbcode_builder/getdeps.py install-system-deps --recursive
          poetry run python ./build/fbcode_builder/getdeps.py --allow-system-packages build
          echo "FOLLY_INSTALL_DIR=$(poetry run python ./build/fbcode_builder/getdeps.py show-inst-dir)" >> $GITHUB_ENV

      - name: Locating built Folly's Include and Lib
        run: |
          BUILT_FOLLY_INCLUDE="${{ env.FOLLY_INSTALL_DIR }}/installed/folly/include"
          if [ ! -d $BUILT_FOLLY_INCLUDE ]; then
            echo "BUILT_FOLLY_INCLUDE=$BUILT_FOLLY_INCLUDE doesn't exist !"
            exit 1
          else
            echo "BUILT_FOLLY_INCLUDE=$BUILT_FOLLY_INCLUDE" >> $GITHUB_ENV
          fi

          BUILT_FOLLY_LIB="${{ env.FOLLY_INSTALL_DIR }}/installed/folly/lib"
          if [ ! -d $BUILT_FOLLY_LIB ]; then
            echo "BUILT_FOLLY_LIB=$BUILT_FOLLY_LIB doesn't exist !"
          else
            echo "BUILT_FOLLY_LIB=$BUILT_FOLLY_LIB" >> $GITHUB_ENV
          fi

      - name: Build
        run: |
          poetry run python setup.py build_ext --inplace -I${{ env.BUILT_FOLLY_LIB }} -L${{ env.BUILT_FOLLY_LIB }}

      - name: Build tests
        run: |
          cd folly/python/test
          poetry run python setup.py build_ext --inplace -I${{ env.BUILT_FOLLY_LIB }} -L${{ env.BUILT_FOLLY_LIB }}

      - name: Run tests
        run: poetry run python -m pytest
