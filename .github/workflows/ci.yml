name: CI

on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.12, 3.13]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Ubuntu deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl file git bash
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.profile
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

      - name: Install MacOS deps
        if: matrix.os == 'macos-latest'
        run: brew install jq
      
      - name: Installing folly (via Homebrew)
        run: |
          brew install folly
          echo "FOLLY_VERSION=$(brew info folly --json | jq -r '.[0].installed[0].version')" >> $GITHUB_ENV
          echo "INCLUDE_DIR=$(brew --prefix)/include" >> $GITHUB_ENV
          echo "LIBRARY_DIR=$(brew --prefix)/lib" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          poetry-version: 'latest'

      - name: Install dependencies
        run: poetry install --all-groups

      - name: Downloading Folly files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FOLLY_VERSION: v${{ env.FOLLY_VERSION }}
        run: poetry run python3 ./download.py -I${{ env.INCLUDE_DIR }} -L${{ env.LIBRARY_DIR }}

      - name: Build (main build)
        env:
          FOLLY_BUILD_DIR: $FOLLY_BUILD_DIR
        run: poetry run python setup.py build_ext --inplace

      - name: Test (depends on build)
        env:
          FOLLY_BUILD_DIR: $FOLLY_BUILD_DIR
        run: |
          cd ./folly/python/test
          poetry run python setup.py build_ext --inplace -I${{ env.INCLUDE_DIR }} -L${{ env.LIBRARY_DIR }}
          cd ../../..
          poetry run pytest